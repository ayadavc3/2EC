// Code generated by ent, DO NOT EDIT.

package ent

import (
	"goapi/ent/organization"
	"goapi/ent/schema"
	"goapi/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	organizationFields := schema.Organization{}.Fields()
	_ = organizationFields
	// organizationDescName is the schema descriptor for name field.
	organizationDescName := organizationFields[1].Descriptor()
	// organization.NameValidator is a validator for the "name" field. It is called by the builders before save.
	organization.NameValidator = organizationDescName.Validators[0].(func(string) error)
	// organizationDescLogo is the schema descriptor for logo field.
	organizationDescLogo := organizationFields[2].Descriptor()
	// organization.LogoValidator is a validator for the "logo" field. It is called by the builders before save.
	organization.LogoValidator = organizationDescLogo.Validators[0].(func(string) error)
	// organizationDescWebsite is the schema descriptor for website field.
	organizationDescWebsite := organizationFields[3].Descriptor()
	// organization.WebsiteValidator is a validator for the "website" field. It is called by the builders before save.
	organization.WebsiteValidator = organizationDescWebsite.Validators[0].(func(string) error)
	// organizationDescDescription is the schema descriptor for description field.
	organizationDescDescription := organizationFields[4].Descriptor()
	// organization.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	organization.DescriptionValidator = organizationDescDescription.Validators[0].(func(string) error)
	// organizationDescCreatedAt is the schema descriptor for created_at field.
	organizationDescCreatedAt := organizationFields[5].Descriptor()
	// organization.DefaultCreatedAt holds the default value on creation for the created_at field.
	organization.DefaultCreatedAt = organizationDescCreatedAt.Default.(func() time.Time)
	// organizationDescUpdatedAt is the schema descriptor for updated_at field.
	organizationDescUpdatedAt := organizationFields[6].Descriptor()
	// organization.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	organization.DefaultUpdatedAt = organizationDescUpdatedAt.Default.(func() time.Time)
	// organization.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	organization.UpdateDefaultUpdatedAt = organizationDescUpdatedAt.UpdateDefault.(func() time.Time)
	// organizationDescID is the schema descriptor for id field.
	organizationDescID := organizationFields[0].Descriptor()
	// organization.DefaultID holds the default value on creation for the id field.
	organization.DefaultID = organizationDescID.Default.(func() string)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
