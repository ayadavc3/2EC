// Code generated by ent, DO NOT EDIT.

package student

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPhotoURL holds the string denoting the photo_url field in the database.
	FieldPhotoURL = "photo_url"
	// FieldFirstName holds the string denoting the first_name field in the database.
	FieldFirstName = "first_name"
	// FieldLastName holds the string denoting the last_name field in the database.
	FieldLastName = "last_name"
	// FieldMiddleName holds the string denoting the middle_name field in the database.
	FieldMiddleName = "middle_name"
	// FieldPhoneNumber holds the string denoting the phone_number field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldDisabled holds the string denoting the disabled field in the database.
	FieldDisabled = "disabled"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldDisabledAt holds the string denoting the disabled_at field in the database.
	FieldDisabledAt = "disabled_at"
	// FieldLastSignedInAt holds the string denoting the last_signed_in_at field in the database.
	FieldLastSignedInAt = "last_signed_in_at"
	// FieldPhoneConfirmedAt holds the string denoting the phone_confirmed_at field in the database.
	FieldPhoneConfirmedAt = "phone_confirmed_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeGuardians holds the string denoting the guardians edge name in mutations.
	EdgeGuardians = "guardians"
	// Table holds the table name of the student in the database.
	Table = "students"
	// GuardiansTable is the table that holds the guardians relation/edge. The primary key declared below.
	GuardiansTable = "guardian_students"
	// GuardiansInverseTable is the table name for the Guardian entity.
	// It exists in this package in order to avoid circular dependency with the "guardian" package.
	GuardiansInverseTable = "guardians"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldPhotoURL,
	FieldFirstName,
	FieldLastName,
	FieldMiddleName,
	FieldPhoneNumber,
	FieldEmail,
	FieldDeleted,
	FieldDisabled,
	FieldDeletedAt,
	FieldDisabledAt,
	FieldLastSignedInAt,
	FieldPhoneConfirmedAt,
	FieldCreatedAt,
	FieldUpdatedAt,
}

var (
	// GuardiansPrimaryKey and GuardiansColumn2 are the table columns denoting the
	// primary key for the guardians relation (M2M).
	GuardiansPrimaryKey = []string{"guardian_id", "student_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	FirstNameValidator func(string) error
	// PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	PhoneNumberValidator func(string) error
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
	// DefaultDisabled holds the default value on creation for the "disabled" field.
	DefaultDisabled bool
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)

// OrderOption defines the ordering options for the Student queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPhotoURL orders the results by the photo_url field.
func ByPhotoURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhotoURL, opts...).ToFunc()
}

// ByFirstName orders the results by the first_name field.
func ByFirstName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFirstName, opts...).ToFunc()
}

// ByLastName orders the results by the last_name field.
func ByLastName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastName, opts...).ToFunc()
}

// ByMiddleName orders the results by the middle_name field.
func ByMiddleName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMiddleName, opts...).ToFunc()
}

// ByPhoneNumber orders the results by the phone_number field.
func ByPhoneNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhoneNumber, opts...).ToFunc()
}

// ByEmail orders the results by the email field.
func ByEmail(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEmail, opts...).ToFunc()
}

// ByDeleted orders the results by the deleted field.
func ByDeleted(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeleted, opts...).ToFunc()
}

// ByDisabled orders the results by the disabled field.
func ByDisabled(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDisabled, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByDisabledAt orders the results by the disabled_at field.
func ByDisabledAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDisabledAt, opts...).ToFunc()
}

// ByLastSignedInAt orders the results by the last_signed_in_at field.
func ByLastSignedInAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastSignedInAt, opts...).ToFunc()
}

// ByPhoneConfirmedAt orders the results by the phone_confirmed_at field.
func ByPhoneConfirmedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhoneConfirmedAt, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByGuardiansCount orders the results by guardians count.
func ByGuardiansCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newGuardiansStep(), opts...)
	}
}

// ByGuardians orders the results by guardians terms.
func ByGuardians(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newGuardiansStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}
func newGuardiansStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(GuardiansInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, true, GuardiansTable, GuardiansPrimaryKey...),
	)
}
