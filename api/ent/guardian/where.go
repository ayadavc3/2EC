// Code generated by ent, DO NOT EDIT.

package guardian

import (
	"goapi/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldID, id))
}

// PhotoURL applies equality check predicate on the "photo_url" field. It's identical to PhotoURLEQ.
func PhotoURL(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhotoURL, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldTitle, v))
}

// FirstName applies equality check predicate on the "first_name" field. It's identical to FirstNameEQ.
func FirstName(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldFirstName, v))
}

// LastName applies equality check predicate on the "last_name" field. It's identical to LastNameEQ.
func LastName(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldLastName, v))
}

// MiddleName applies equality check predicate on the "middle_name" field. It's identical to MiddleNameEQ.
func MiddleName(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldMiddleName, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhoneNumber, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldEmail, v))
}

// Deleted applies equality check predicate on the "deleted" field. It's identical to DeletedEQ.
func Deleted(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDeleted, v))
}

// Disabled applies equality check predicate on the "disabled" field. It's identical to DisabledEQ.
func Disabled(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDisabled, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDeletedAt, v))
}

// DisabledAt applies equality check predicate on the "disabled_at" field. It's identical to DisabledAtEQ.
func DisabledAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDisabledAt, v))
}

// LastSignedInAt applies equality check predicate on the "last_signed_in_at" field. It's identical to LastSignedInAtEQ.
func LastSignedInAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldLastSignedInAt, v))
}

// PhoneConfirmedAt applies equality check predicate on the "phone_confirmed_at" field. It's identical to PhoneConfirmedAtEQ.
func PhoneConfirmedAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhoneConfirmedAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldUpdatedAt, v))
}

// PhotoURLEQ applies the EQ predicate on the "photo_url" field.
func PhotoURLEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhotoURL, v))
}

// PhotoURLNEQ applies the NEQ predicate on the "photo_url" field.
func PhotoURLNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldPhotoURL, v))
}

// PhotoURLIn applies the In predicate on the "photo_url" field.
func PhotoURLIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldPhotoURL, vs...))
}

// PhotoURLNotIn applies the NotIn predicate on the "photo_url" field.
func PhotoURLNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldPhotoURL, vs...))
}

// PhotoURLGT applies the GT predicate on the "photo_url" field.
func PhotoURLGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldPhotoURL, v))
}

// PhotoURLGTE applies the GTE predicate on the "photo_url" field.
func PhotoURLGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldPhotoURL, v))
}

// PhotoURLLT applies the LT predicate on the "photo_url" field.
func PhotoURLLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldPhotoURL, v))
}

// PhotoURLLTE applies the LTE predicate on the "photo_url" field.
func PhotoURLLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldPhotoURL, v))
}

// PhotoURLContains applies the Contains predicate on the "photo_url" field.
func PhotoURLContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldPhotoURL, v))
}

// PhotoURLHasPrefix applies the HasPrefix predicate on the "photo_url" field.
func PhotoURLHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldPhotoURL, v))
}

// PhotoURLHasSuffix applies the HasSuffix predicate on the "photo_url" field.
func PhotoURLHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldPhotoURL, v))
}

// PhotoURLIsNil applies the IsNil predicate on the "photo_url" field.
func PhotoURLIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldPhotoURL))
}

// PhotoURLNotNil applies the NotNil predicate on the "photo_url" field.
func PhotoURLNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldPhotoURL))
}

// PhotoURLEqualFold applies the EqualFold predicate on the "photo_url" field.
func PhotoURLEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldPhotoURL, v))
}

// PhotoURLContainsFold applies the ContainsFold predicate on the "photo_url" field.
func PhotoURLContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldPhotoURL, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldTitle, v))
}

// FirstNameEQ applies the EQ predicate on the "first_name" field.
func FirstNameEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldFirstName, v))
}

// FirstNameNEQ applies the NEQ predicate on the "first_name" field.
func FirstNameNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldFirstName, v))
}

// FirstNameIn applies the In predicate on the "first_name" field.
func FirstNameIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldFirstName, vs...))
}

// FirstNameNotIn applies the NotIn predicate on the "first_name" field.
func FirstNameNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldFirstName, vs...))
}

// FirstNameGT applies the GT predicate on the "first_name" field.
func FirstNameGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldFirstName, v))
}

// FirstNameGTE applies the GTE predicate on the "first_name" field.
func FirstNameGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldFirstName, v))
}

// FirstNameLT applies the LT predicate on the "first_name" field.
func FirstNameLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldFirstName, v))
}

// FirstNameLTE applies the LTE predicate on the "first_name" field.
func FirstNameLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldFirstName, v))
}

// FirstNameContains applies the Contains predicate on the "first_name" field.
func FirstNameContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldFirstName, v))
}

// FirstNameHasPrefix applies the HasPrefix predicate on the "first_name" field.
func FirstNameHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldFirstName, v))
}

// FirstNameHasSuffix applies the HasSuffix predicate on the "first_name" field.
func FirstNameHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldFirstName, v))
}

// FirstNameEqualFold applies the EqualFold predicate on the "first_name" field.
func FirstNameEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldFirstName, v))
}

// FirstNameContainsFold applies the ContainsFold predicate on the "first_name" field.
func FirstNameContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldFirstName, v))
}

// LastNameEQ applies the EQ predicate on the "last_name" field.
func LastNameEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldLastName, v))
}

// LastNameNEQ applies the NEQ predicate on the "last_name" field.
func LastNameNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldLastName, v))
}

// LastNameIn applies the In predicate on the "last_name" field.
func LastNameIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldLastName, vs...))
}

// LastNameNotIn applies the NotIn predicate on the "last_name" field.
func LastNameNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldLastName, vs...))
}

// LastNameGT applies the GT predicate on the "last_name" field.
func LastNameGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldLastName, v))
}

// LastNameGTE applies the GTE predicate on the "last_name" field.
func LastNameGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldLastName, v))
}

// LastNameLT applies the LT predicate on the "last_name" field.
func LastNameLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldLastName, v))
}

// LastNameLTE applies the LTE predicate on the "last_name" field.
func LastNameLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldLastName, v))
}

// LastNameContains applies the Contains predicate on the "last_name" field.
func LastNameContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldLastName, v))
}

// LastNameHasPrefix applies the HasPrefix predicate on the "last_name" field.
func LastNameHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldLastName, v))
}

// LastNameHasSuffix applies the HasSuffix predicate on the "last_name" field.
func LastNameHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldLastName, v))
}

// LastNameIsNil applies the IsNil predicate on the "last_name" field.
func LastNameIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldLastName))
}

// LastNameNotNil applies the NotNil predicate on the "last_name" field.
func LastNameNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldLastName))
}

// LastNameEqualFold applies the EqualFold predicate on the "last_name" field.
func LastNameEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldLastName, v))
}

// LastNameContainsFold applies the ContainsFold predicate on the "last_name" field.
func LastNameContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldLastName, v))
}

// MiddleNameEQ applies the EQ predicate on the "middle_name" field.
func MiddleNameEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldMiddleName, v))
}

// MiddleNameNEQ applies the NEQ predicate on the "middle_name" field.
func MiddleNameNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldMiddleName, v))
}

// MiddleNameIn applies the In predicate on the "middle_name" field.
func MiddleNameIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldMiddleName, vs...))
}

// MiddleNameNotIn applies the NotIn predicate on the "middle_name" field.
func MiddleNameNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldMiddleName, vs...))
}

// MiddleNameGT applies the GT predicate on the "middle_name" field.
func MiddleNameGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldMiddleName, v))
}

// MiddleNameGTE applies the GTE predicate on the "middle_name" field.
func MiddleNameGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldMiddleName, v))
}

// MiddleNameLT applies the LT predicate on the "middle_name" field.
func MiddleNameLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldMiddleName, v))
}

// MiddleNameLTE applies the LTE predicate on the "middle_name" field.
func MiddleNameLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldMiddleName, v))
}

// MiddleNameContains applies the Contains predicate on the "middle_name" field.
func MiddleNameContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldMiddleName, v))
}

// MiddleNameHasPrefix applies the HasPrefix predicate on the "middle_name" field.
func MiddleNameHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldMiddleName, v))
}

// MiddleNameHasSuffix applies the HasSuffix predicate on the "middle_name" field.
func MiddleNameHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldMiddleName, v))
}

// MiddleNameIsNil applies the IsNil predicate on the "middle_name" field.
func MiddleNameIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldMiddleName))
}

// MiddleNameNotNil applies the NotNil predicate on the "middle_name" field.
func MiddleNameNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldMiddleName))
}

// MiddleNameEqualFold applies the EqualFold predicate on the "middle_name" field.
func MiddleNameEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldMiddleName, v))
}

// MiddleNameContainsFold applies the ContainsFold predicate on the "middle_name" field.
func MiddleNameContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldMiddleName, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.Guardian {
	return predicate.Guardian(sql.FieldContainsFold(FieldEmail, v))
}

// DeletedEQ applies the EQ predicate on the "deleted" field.
func DeletedEQ(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDeleted, v))
}

// DeletedNEQ applies the NEQ predicate on the "deleted" field.
func DeletedNEQ(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldDeleted, v))
}

// DisabledEQ applies the EQ predicate on the "disabled" field.
func DisabledEQ(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDisabled, v))
}

// DisabledNEQ applies the NEQ predicate on the "disabled" field.
func DisabledNEQ(v bool) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldDisabled, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldDeletedAt))
}

// DisabledAtEQ applies the EQ predicate on the "disabled_at" field.
func DisabledAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldDisabledAt, v))
}

// DisabledAtNEQ applies the NEQ predicate on the "disabled_at" field.
func DisabledAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldDisabledAt, v))
}

// DisabledAtIn applies the In predicate on the "disabled_at" field.
func DisabledAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldDisabledAt, vs...))
}

// DisabledAtNotIn applies the NotIn predicate on the "disabled_at" field.
func DisabledAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldDisabledAt, vs...))
}

// DisabledAtGT applies the GT predicate on the "disabled_at" field.
func DisabledAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldDisabledAt, v))
}

// DisabledAtGTE applies the GTE predicate on the "disabled_at" field.
func DisabledAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldDisabledAt, v))
}

// DisabledAtLT applies the LT predicate on the "disabled_at" field.
func DisabledAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldDisabledAt, v))
}

// DisabledAtLTE applies the LTE predicate on the "disabled_at" field.
func DisabledAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldDisabledAt, v))
}

// DisabledAtIsNil applies the IsNil predicate on the "disabled_at" field.
func DisabledAtIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldDisabledAt))
}

// DisabledAtNotNil applies the NotNil predicate on the "disabled_at" field.
func DisabledAtNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldDisabledAt))
}

// LastSignedInAtEQ applies the EQ predicate on the "last_signed_in_at" field.
func LastSignedInAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldLastSignedInAt, v))
}

// LastSignedInAtNEQ applies the NEQ predicate on the "last_signed_in_at" field.
func LastSignedInAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldLastSignedInAt, v))
}

// LastSignedInAtIn applies the In predicate on the "last_signed_in_at" field.
func LastSignedInAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldLastSignedInAt, vs...))
}

// LastSignedInAtNotIn applies the NotIn predicate on the "last_signed_in_at" field.
func LastSignedInAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldLastSignedInAt, vs...))
}

// LastSignedInAtGT applies the GT predicate on the "last_signed_in_at" field.
func LastSignedInAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldLastSignedInAt, v))
}

// LastSignedInAtGTE applies the GTE predicate on the "last_signed_in_at" field.
func LastSignedInAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldLastSignedInAt, v))
}

// LastSignedInAtLT applies the LT predicate on the "last_signed_in_at" field.
func LastSignedInAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldLastSignedInAt, v))
}

// LastSignedInAtLTE applies the LTE predicate on the "last_signed_in_at" field.
func LastSignedInAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldLastSignedInAt, v))
}

// LastSignedInAtIsNil applies the IsNil predicate on the "last_signed_in_at" field.
func LastSignedInAtIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldLastSignedInAt))
}

// LastSignedInAtNotNil applies the NotNil predicate on the "last_signed_in_at" field.
func LastSignedInAtNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldLastSignedInAt))
}

// PhoneConfirmedAtEQ applies the EQ predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtNEQ applies the NEQ predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtIn applies the In predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldPhoneConfirmedAt, vs...))
}

// PhoneConfirmedAtNotIn applies the NotIn predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldPhoneConfirmedAt, vs...))
}

// PhoneConfirmedAtGT applies the GT predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtGTE applies the GTE predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtLT applies the LT predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtLTE applies the LTE predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldPhoneConfirmedAt, v))
}

// PhoneConfirmedAtIsNil applies the IsNil predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtIsNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldIsNull(FieldPhoneConfirmedAt))
}

// PhoneConfirmedAtNotNil applies the NotNil predicate on the "phone_confirmed_at" field.
func PhoneConfirmedAtNotNil() predicate.Guardian {
	return predicate.Guardian(sql.FieldNotNull(FieldPhoneConfirmedAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Guardian {
	return predicate.Guardian(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasStudents applies the HasEdge predicate on the "students" edge.
func HasStudents() predicate.Guardian {
	return predicate.Guardian(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, StudentsTable, StudentsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasStudentsWith applies the HasEdge predicate on the "students" edge with a given conditions (other predicates).
func HasStudentsWith(preds ...predicate.Student) predicate.Guardian {
	return predicate.Guardian(func(s *sql.Selector) {
		step := newStudentsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Guardian) predicate.Guardian {
	return predicate.Guardian(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Guardian) predicate.Guardian {
	return predicate.Guardian(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Guardian) predicate.Guardian {
	return predicate.Guardian(sql.NotPredicates(p))
}
