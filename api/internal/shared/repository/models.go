// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Author struct {
	ID        string           `json:"id"`
	Name      string           `json:"name"`
	Slug      string           `json:"slug"`
	Bio       pgtype.Text      `json:"bio"`
	ImageUrl  pgtype.Text      `json:"imageUrl"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
	UpdatedAt pgtype.Timestamp `json:"updatedAt"`
	IsActive  bool             `json:"isActive"`
	Type      interface{}      `json:"type"`
}

type Book struct {
	ID          string           `json:"id"`
	Title       string           `json:"title"`
	Slug        string           `json:"slug"`
	Description pgtype.Text      `json:"description"`
	Duration    int32            `json:"duration"`
	CoverImage  pgtype.Text      `json:"coverImage"`
	Rating      float64          `json:"rating"`
	TotalRating int32            `json:"totalRating"`
	Language    string           `json:"language"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
	UpdatedAt   pgtype.Timestamp `json:"updatedAt"`
	Published   bool             `json:"published"`
}

type BookToCategory struct {
	A string `json:"A"`
	B string `json:"B"`
}

type Category struct {
	ID          string           `json:"id"`
	Name        string           `json:"name"`
	Slug        string           `json:"slug"`
	Description pgtype.Text      `json:"description"`
	ImageUrl    pgtype.Text      `json:"imageUrl"`
	Color       pgtype.Text      `json:"color"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
	UpdatedAt   pgtype.Timestamp `json:"updatedAt"`
	IsActive    bool             `json:"isActive"`
}

type Episode struct {
	ID          string           `json:"id"`
	Title       string           `json:"title"`
	Description pgtype.Text      `json:"description"`
	AudioUrl    string           `json:"audioUrl"`
	Duration    int32            `json:"duration"`
	Sequence    int32            `json:"sequence"`
	BookId      string           `json:"bookId"`
	IsUploaded  bool             `json:"isUploaded"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
	UpdatedAt   pgtype.Timestamp `json:"updatedAt"`
	Published   bool             `json:"published"`
}

type NarratedBook struct {
	A string `json:"A"`
	B string `json:"B"`
}

type User struct {
	Uid             string           `json:"uid"`
	Email           pgtype.Text      `json:"email"`
	Phone           pgtype.Text      `json:"phone"`
	DisplayName     pgtype.Text      `json:"displayName"`
	PhotoUrl        pgtype.Text      `json:"photoUrl"`
	CreatedAt       pgtype.Timestamp `json:"createdAt"`
	UpdatedAt       pgtype.Timestamp `json:"updatedAt"`
	IsActive        bool             `json:"isActive"`
	Role            interface{}      `json:"role"`
	IsPhoneVerified bool             `json:"isPhoneVerified"`
	IsEmailVerified bool             `json:"isEmailVerified"`
}

type UserLibrary struct {
	ID           string           `json:"id"`
	UserId       string           `json:"userId"`
	BookId       string           `json:"bookId"`
	EpisodeId    string           `json:"episodeId"`
	Progress     int32            `json:"progress"`
	LastPlayedAt pgtype.Timestamp `json:"lastPlayedAt"`
	CreatedAt    pgtype.Timestamp `json:"createdAt"`
	UpdatedAt    pgtype.Timestamp `json:"updatedAt"`
	Status       interface{}      `json:"status"`
}

type Wishlist struct {
	ID        string           `json:"id"`
	UserId    string           `json:"userId"`
	BookId    string           `json:"bookId"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
}

type WrittenBook struct {
	A string `json:"A"`
	B string `json:"B"`
}
